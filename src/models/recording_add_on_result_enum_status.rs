/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecordingAddOnResultEnumStatus {
    #[serde(rename = "canceled")]
    Canceled,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "deleted")]
    Deleted,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "in-progress")]
    InProgress,
    #[serde(rename = "init")]
    Init,
    #[serde(rename = "processing")]
    Processing,
    #[serde(rename = "queued")]
    Queued,

}

impl std::fmt::Display for RecordingAddOnResultEnumStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Canceled => write!(f, "canceled"),
            Self::Completed => write!(f, "completed"),
            Self::Deleted => write!(f, "deleted"),
            Self::Failed => write!(f, "failed"),
            Self::InProgress => write!(f, "in-progress"),
            Self::Init => write!(f, "init"),
            Self::Processing => write!(f, "processing"),
            Self::Queued => write!(f, "queued"),
        }
    }
}

impl Default for RecordingAddOnResultEnumStatus {
    fn default() -> RecordingAddOnResultEnumStatus {
        Self::Canceled
    }
}

